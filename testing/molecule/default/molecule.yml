---
# Splunk Role Testing Scenario
# Tests the ansible-role-for-splunk via SSH connections (production-like)
# Assumes lab infrastructure already exists from bootstrap scenario

driver:
  name: docker

platforms:
  # Ansible Controller (uses existing bootstrapped container)
  - name: ansible-controller
    image: ansible-controller:latest
    pre_build_image: true
    privileged: false
    networks:
      - name: splunk-test-network
    published_ports:
      - "3000:3000"  # Webtop Web Desktop
      - "3001:3001"  # Webtop Web Desktop (alternative)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ssh-keys:/shared/ssh_keys:rw
      - ${MOLECULE_PROJECT_DIRECTORY}:/workspace:ro
    env:
      PUID: 1000
      PGID: 1000
      TZ: America/New_York
      TITLE: "Splunk Lab Controller"
    groups:
      - ansible_controller
    # Use docker connection for ansible-controller management
    ansible_connection: docker
    ansible_user: root

  # Core cluster infrastructure (all use SSH for Splunk role testing)
  - name: splunk-master
    image: splunk-base-almalinux9:latest
    pre_build_image: true
    privileged: true
    cgroupns_mode: host
    networks:
      - name: splunk-test-network
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
      - splunk-master-data:/opt/splunk:rw
      - ssh-keys:/shared/ssh_keys:rw
    tmpfs:
      - /run
      - /tmp
    command: /usr/sbin/init
    groups:
      - clustermanager
    # Use SSH connection for realistic Splunk role testing
    ansible_connection: ssh
    ansible_host: splunk-master
    ansible_user: ansible
    ansible_ssh_private_key_file: /shared/ssh_keys/id_rsa
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

  - name: splunk-license
    image: splunk-base-ubuntu2204:latest
    pre_build_image: true
    privileged: true
    cgroupns_mode: host
    networks:
      - name: splunk-test-network
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
      - splunk-license-data:/opt/splunk:rw
      - ssh-keys:/shared/ssh_keys:rw
    tmpfs:
      - /run
      - /tmp
    command: /usr/sbin/init
    groups:
      - licensemaster
      - dmc
    # Use SSH connection for realistic Splunk role testing
    ansible_connection: ssh
    ansible_host: splunk-license
    ansible_user: ansible
    ansible_ssh_private_key_file: /shared/ssh_keys/id_rsa
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

  - name: splunk-fwdmanager
    image: splunk-base-almalinux9:latest
    pre_build_image: true
    privileged: true
    cgroupns_mode: host
    networks:
      - name: splunk-test-network
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
      - splunk-ds-data:/opt/splunk:rw
      - ssh-keys:/shared/ssh_keys:rw
    tmpfs:
      - /run
      - /tmp
    command: /usr/sbin/init
    groups:
      - deploymentserver
    # Use SSH connection for realistic Splunk role testing
    ansible_connection: ssh
    ansible_host: splunk-fwdmanager
    ansible_user: ansible
    ansible_ssh_private_key_file: /shared/ssh_keys/id_rsa
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

  # Indexing tier (2 indexers, 2 sites)
  - name: splunkapp-prod01
    image: splunk-base-ubuntu2204:latest
    pre_build_image: true
    privileged: true
    cgroupns_mode: host
    networks:
      - name: splunk-test-network
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
      - splunk-idx1-data:/opt/splunk:rw
      - ssh-keys:/shared/ssh_keys:rw
    tmpfs:
      - /run
      - /tmp
    command: /usr/sbin/init
    groups:
      - indexer
      - indexer_site1
    # Use SSH connection for realistic Splunk role testing
    ansible_connection: ssh
    ansible_host: splunkapp-prod01
    ansible_user: ansible
    ansible_ssh_private_key_file: /shared/ssh_keys/id_rsa
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

  - name: splunkapp-prod02
    image: splunk-base-almalinux9:latest
    pre_build_image: true
    privileged: true
    cgroupns_mode: host
    networks:
      - name: splunk-test-network
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
      - splunk-idx2-data:/opt/splunk:rw
      - ssh-keys:/shared/ssh_keys:rw
    tmpfs:
      - /run
      - /tmp
    command: /usr/sbin/init
    groups:
      - indexer
      - indexer_site2
    # Use SSH connection for realistic Splunk role testing
    ansible_connection: ssh
    ansible_host: splunkapp-prod02
    ansible_user: ansible
    ansible_ssh_private_key_file: /shared/ssh_keys/id_rsa
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

  # Search Head Cluster (2 nodes)
  - name: splunkshc-prod01
    image: splunk-base-ubuntu2204:latest
    pre_build_image: true
    privileged: true
    cgroupns_mode: host
    networks:
      - name: splunk-test-network
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
      - splunk-shc1-data:/opt/splunk:rw
      - ssh-keys:/shared/ssh_keys:rw
    tmpfs:
      - /run
      - /tmp
    command: /usr/sbin/init
    groups:
      - shcluster
    # Use SSH connection for realistic Splunk role testing
    ansible_connection: ssh
    ansible_host: splunkshc-prod01
    ansible_user: ansible
    ansible_ssh_private_key_file: /shared/ssh_keys/id_rsa
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

  - name: splunkshc-prod02
    image: splunk-base-almalinux9:latest
    pre_build_image: true
    privileged: true
    cgroupns_mode: host
    networks:
      - name: splunk-test-network
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
      - splunk-shc2-data:/opt/splunk:rw
      - ssh-keys:/shared/ssh_keys:rw
    tmpfs:
      - /run
      - /tmp
    command: /usr/sbin/init
    groups:
      - shcluster
    # Use SSH connection for realistic Splunk role testing
    ansible_connection: ssh
    ansible_host: splunkshc-prod02
    ansible_user: ansible
    ansible_ssh_private_key_file: /shared/ssh_keys/id_rsa
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

  - name: splunk-deploy
    image: splunk-base-ubuntu2204:latest
    pre_build_image: true
    privileged: true
    cgroupns_mode: host
    networks:
      - name: splunk-test-network
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
      - splunk-deployer-data:/opt/splunk:rw
      - ssh-keys:/shared/ssh_keys:rw
    tmpfs:
      - /run
      - /tmp
    command: /usr/sbin/init
    groups:
      - shdeployer
    # Use SSH connection for realistic Splunk role testing
    ansible_connection: ssh
    ansible_host: splunk-deploy
    ansible_user: ansible
    ansible_ssh_private_key_file: /shared/ssh_keys/id_rsa
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

  # Universal Forwarder (data source)
  - name: splunk-uf01
    image: splunk-base-ubuntu2204:latest
    pre_build_image: true
    privileged: true
    cgroupns_mode: host
    networks:
      - name: splunk-test-network
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
      - splunk-uf1-data:/opt/splunkforwarder:rw
      - ssh-keys:/shared/ssh_keys:rw
    tmpfs:
      - /run
      - /tmp
    command: /usr/sbin/init
    groups:
      - uf
    # Use SSH connection for realistic Splunk role testing
    ansible_connection: ssh
    ansible_host: splunk-uf01
    ansible_user: ansible
    ansible_ssh_private_key_file: /shared/ssh_keys/id_rsa
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

  # Gitea server for app testing (not part of Splunk role testing)
  - name: git-server
    image: splunk-git-server:latest
    pre_build_image: true
    networks:
      - name: splunk-test-network
    published_ports:
      - "2222:22"    # SSH for git
      - "8929:8929"  # Web interface
    volumes:
      - gitea-data:/data:rw
      - ssh-keys:/shared/ssh_keys:rw
    groups:
      - git_server

provisioner:
  name: ansible
  inventory:
    host_list:
      - inventory/
  config_options:
    defaults:
      host_key_checking: False
      remote_user: ansible
  ansible_args:
    - --inventory-file=/tmp/molecule-ansible-inventory

verifier:
  name: ansible

scenario:
  # Splunk role testing sequence
  destroy_sequence:
    - cleanup
  create_sequence:
    - dependency
    - create
  converge_sequence:
    - dependency
    - create  
    - converge
  test_sequence:
    - dependency
    - cleanup
    - destroy
    - create
    - converge
    - verify