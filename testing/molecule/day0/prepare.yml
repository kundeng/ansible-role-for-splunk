---
# Molecule prepare playbook
# Sets up the environment before running the main role

- name: Prepare all Splunk instances
  hosts: all:!git_server:!ansible-controller
  become: true
  gather_facts: true
  tasks:
    - name: Update package cache
      package:
        update_cache: true
      when: ansible_pkg_mgr in ['apt', 'yum', 'dnf']

    - name: Ensure Python3 is available
      raw: |
        if command -v python3 >/dev/null 2>&1; then
          echo "Python3 already installed"
        elif command -v apt-get >/dev/null 2>&1; then
          apt-get update && apt-get install -y python3
        elif command -v yum >/dev/null 2>&1; then
          yum install -y python3
        elif command -v dnf >/dev/null 2>&1; then
          dnf install -y python3
        else
          echo "Could not install Python3"
          exit 1
        fi
      changed_when: false

    - name: Wait for systemd to be ready
      wait_for:
        path: /run/systemd/system
      when: ansible_service_mgr == "systemd"

    - name: Generate SSH key pair for inter-container communication
      openssh_keypair:
        path: /tmp/splunk_cluster_key
        type: rsa
        size: 2048
        comment: "splunk-test-cluster"
        force: true  # Force regeneration if key exists
        mode: '0644'  # Make readable for ansible to copy
      run_once: true
      delegate_to: localhost

    - name: Fix SSH private key permissions for copying
      file:
        path: /tmp/splunk_cluster_key
        mode: '0644'
      run_once: true
      delegate_to: localhost

    - name: Copy SSH keys to shared volume  
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode }}"
      loop:
        - { src: /tmp/splunk_cluster_key, dest: /shared/ssh_keys/id_rsa, mode: '0600' }
        - { src: /tmp/splunk_cluster_key.pub, dest: /shared/ssh_keys/id_rsa.pub, mode: '0644' }
      run_once: true
      delegate_to: splunk-license

    - name: Set up SSH for inter-container communication
      block:
        - name: Ensure SSH server is installed and running
          systemd:
            name: "{{ 'sshd' if ansible_os_family == 'RedHat' else 'ssh' }}"
            state: started
            enabled: true

        - name: Create ansible user SSH directory
          file:
            path: /home/ansible/.ssh
            state: directory
            owner: ansible
            group: ansible
            mode: '0700'

        - name: Copy SSH public key to authorized_keys
          copy:
            src: /tmp/splunk_cluster_key.pub
            dest: /home/ansible/.ssh/authorized_keys
            owner: ansible
            group: ansible
            mode: '0600'

        - name: Copy SSH private key for ansible user
          copy:
            src: /tmp/splunk_cluster_key
            dest: /home/ansible/.ssh/id_rsa
            owner: ansible
            group: ansible
            mode: '0600'

        - name: Configure SSH client settings
          blockinfile:
            path: /home/ansible/.ssh/config
            create: true
            owner: ansible
            group: ansible
            mode: '0600'
            block: |
              Host *
                StrictHostKeyChecking no
                UserKnownHostsFile /dev/null
                LogLevel ERROR

    - name: Create test data directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - /var/log/test-data
        - /tmp/test-logs
      when: inventory_hostname in groups['uf']

- name: Prepare GitLab
  hosts: git_server
  tasks:
    - name: Wait for GitLab to start
      wait_for:
        port: 8929
        timeout: 300
        delay: 30
      
    - name: Create test repositories (placeholder)
      debug:
        msg: "GitLab ready for app repository testing"