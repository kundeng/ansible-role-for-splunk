---
# Molecule verify playbook
# Tests that the Splunk cluster is working correctly

- name: Verify Splunk services are running
  hosts: all:!git_server:!ansible-controller
  become: true
  tasks:
    - name: Include Splunk status check from upstream role
      include_role:
        name: splunk
        tasks_from: check_splunk_status.yml

    - name: Check if Splunk service is running (full instances)
      systemd:
        name: splunk
      register: splunk_service_status
      when: inventory_hostname in groups['full']

    - name: Check if Splunk Universal Forwarder service is running
      systemd:
        name: splunkforwarder
      register: splunkforwarder_service_status
      when: inventory_hostname in groups['uf']

    - name: Verify Splunk is listening on management port
      wait_for:
        host: "{{ ansible_default_ipv4.address }}"
        port: 8089
        timeout: 60
      when: inventory_hostname in groups['full']

    - name: Verify Splunk web interface is accessible (search heads)
      wait_for:
        host: "{{ ansible_default_ipv4.address }}"
        port: 8000
        timeout: 60
      when: inventory_hostname in groups['shcluster']

- name: Verify cluster status
  hosts: clustermanager
  become: true
  become_user: splunk
  tasks:
    - name: Check cluster manager status
      command: /opt/splunk/bin/splunk show cluster-status -auth admin:changeme
      register: cluster_status
      failed_when: false
      changed_when: false

    - name: Display cluster status
      debug:
        var: cluster_status.stdout_lines

- name: Verify search head cluster status  
  hosts: shdeployer
  become: true
  become_user: splunk
  tasks:
    - name: Check search head cluster status
      command: /opt/splunk/bin/splunk show shcluster-status -auth admin:changeme
      register: shc_status
      failed_when: false
      changed_when: false

    - name: Display SHC status
      debug:
        var: shc_status.stdout_lines

- name: Verify GitLab is accessible
  hosts: git_server
  tasks:
    - name: Check GitLab web interface
      uri:
        url: "http://{{ ansible_default_ipv4.address }}:8929"
        method: GET
        status_code: [200, 302]
      register: gitlab_check

    - name: Verify GitLab response
      debug:
        msg: "GitLab is accessible and responding"
      when: gitlab_check.status in [200, 302]