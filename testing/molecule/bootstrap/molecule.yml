---
# Bootstrap Lab Infrastructure Scenario  
# Creates and configures all containers for the testing lab
# Uses docker connections for efficient infrastructure setup

driver:
  name: docker

platforms:
  # Web Terminal Ansible Controller - includes wetty for web access
  - name: ansible-controller
    image: ansible-webterminal:latest
    pre_build_image: true
    privileged: false
    networks:
      - name: splunk-test-network
    published_ports:
      - "3000:3000"  # Web terminal access
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ssh-keys:/shared/ssh_keys:rw
      - /workspace:/workspace:rw
    groups:
      - ansible_controller
    # Use docker connection for setup like other containers
    ansible_connection: docker

  # Remote.it Jumpbox for external access
  - name: remoteit-jumpbox
    image: remoteit/docker-extension:latest
    pre_build_image: true
    privileged: true
    pull_policy: always
    networks:
      - name: splunk-test-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    env:
      R3_REGISTRATION_CODE: "${R3_REGISTRATION_CODE:-unset}"
    command: ["/startup.sh", "/sbin/init"]
    restart_policy: unless-stopped
    groups:
      - jumpbox
    ansible_connection: docker
    ansible_user: root

  # Core cluster infrastructure (all use docker connections for bootstrap)
  - name: splunk-master
    image: splunk-base-almalinux9:latest
    pre_build_image: true
    privileged: true
    cgroupns_mode: host
    networks:
      - name: splunk-test-network
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
      - splunk-master-data:/opt/splunk:rw
      - ssh-keys:/shared/ssh_keys:rw
    tmpfs:
      - /run
      - /tmp
    command: /usr/sbin/init
    groups:
      - clustermanager
      - splunk_infrastructure
    # Use docker connection for infrastructure bootstrap
    ansible_connection: docker
    ansible_user: root

  - name: splunk-license
    image: splunk-base-ubuntu2204:latest
    pre_build_image: true
    privileged: true
    cgroupns_mode: host
    networks:
      - name: splunk-test-network
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
      - splunk-license-data:/opt/splunk:rw
      - ssh-keys:/shared/ssh_keys:rw
    tmpfs:
      - /run
      - /tmp
    command: /usr/sbin/init
    groups:
      - licensemaster
      - dmc
      - splunk_infrastructure
    # Use docker connection for infrastructure bootstrap
    ansible_connection: docker
    ansible_user: root

  - name: splunk-fwdmanager
    image: splunk-base-almalinux9:latest
    pre_build_image: true
    privileged: true
    cgroupns_mode: host
    networks:
      - name: splunk-test-network
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
      - splunk-ds-data:/opt/splunk:rw
      - ssh-keys:/shared/ssh_keys:rw
    tmpfs:
      - /run
      - /tmp
    command: /usr/sbin/init
    groups:
      - deploymentserver
      - splunk_infrastructure
    # Use docker connection for infrastructure bootstrap
    ansible_connection: docker
    ansible_user: root

  # Indexing tier (2 indexers, 2 sites)
  - name: splunkapp-prod01
    image: splunk-base-ubuntu2204:latest
    pre_build_image: true
    privileged: true
    cgroupns_mode: host
    networks:
      - name: splunk-test-network
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
      - splunk-idx1-data:/opt/splunk:rw
      - ssh-keys:/shared/ssh_keys:rw
    tmpfs:
      - /run
      - /tmp
    command: /usr/sbin/init
    groups:
      - indexer
      - indexer_site1
      - splunk_infrastructure
    # Use docker connection for infrastructure bootstrap
    ansible_connection: docker
    ansible_user: root

  - name: splunkapp-prod02
    image: splunk-base-almalinux9:latest
    pre_build_image: true
    privileged: true
    cgroupns_mode: host
    networks:
      - name: splunk-test-network
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
      - splunk-idx2-data:/opt/splunk:rw
      - ssh-keys:/shared/ssh_keys:rw
    tmpfs:
      - /run
      - /tmp
    command: /usr/sbin/init
    groups:
      - indexer
      - indexer_site2
      - splunk_infrastructure
    # Use docker connection for infrastructure bootstrap
    ansible_connection: docker
    ansible_user: root

  # Search Head Cluster (2 nodes)
  - name: splunkshc-prod01
    image: splunk-base-ubuntu2204:latest
    pre_build_image: true
    privileged: true
    cgroupns_mode: host
    networks:
      - name: splunk-test-network
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
      - splunk-shc1-data:/opt/splunk:rw
      - ssh-keys:/shared/ssh_keys:rw
    tmpfs:
      - /run
      - /tmp
    command: /usr/sbin/init
    groups:
      - shcluster
      - splunk_infrastructure
    # Use docker connection for infrastructure bootstrap
    ansible_connection: docker
    ansible_user: root

  - name: splunkshc-prod02
    image: splunk-base-almalinux9:latest
    pre_build_image: true
    privileged: true
    cgroupns_mode: host
    networks:
      - name: splunk-test-network
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
      - splunk-shc2-data:/opt/splunk:rw
      - ssh-keys:/shared/ssh_keys:rw
    tmpfs:
      - /run
      - /tmp
    command: /usr/sbin/init
    groups:
      - shcluster
      - splunk_infrastructure
    # Use docker connection for infrastructure bootstrap
    ansible_connection: docker
    ansible_user: root

  - name: splunk-deploy
    image: splunk-base-ubuntu2204:latest
    pre_build_image: true
    privileged: true
    cgroupns_mode: host
    networks:
      - name: splunk-test-network
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
      - splunk-deployer-data:/opt/splunk:rw
      - ssh-keys:/shared/ssh_keys:rw
    tmpfs:
      - /run
      - /tmp
    command: /usr/sbin/init
    groups:
      - shdeployer
      - splunk_infrastructure
    # Use docker connection for infrastructure bootstrap
    ansible_connection: docker
    ansible_user: root

  # Universal Forwarder (data source)
  - name: splunk-uf01
    image: splunk-base-ubuntu2204:latest
    pre_build_image: true
    privileged: true
    cgroupns_mode: host
    networks:
      - name: splunk-test-network
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
      - splunk-uf1-data:/opt/splunkforwarder:rw
      - ssh-keys:/shared/ssh_keys:rw
    tmpfs:
      - /run
      - /tmp
    command: /usr/sbin/init
    groups:
      - uf
      - splunk_infrastructure
    # Use docker connection for infrastructure bootstrap
    ansible_connection: docker
    ansible_user: root

  # Gitea server for app testing  
  - name: git-server
    image: splunk-git-server:latest
    pre_build_image: true
    networks:
      - name: splunk-test-network
    published_ports:
      - "2222:22"    # SSH for git
      - "8929:8929"  # Web interface
    volumes:
      - gitea-data:/data:rw
      - ssh-keys:/shared/ssh_keys:rw
    groups:
      - git_server
    # Use docker connection for git server setup
    ansible_connection: docker
    ansible_user: root

dependency:
  name: shell
  command: echo "Skipping dependency installation - collections pre-installed in image"

provisioner:
  name: ansible
  inventory:
    host_list:
      - inventory/

verifier:
  name: ansible

scenario:
  # Bootstrap sequence - infrastructure setup only
  destroy_sequence:
    - cleanup
  create_sequence:
    - dependency
    - create
    - prepare
  converge_sequence:
    - dependency
    - create
    - prepare
    - converge
  test_sequence:
    - dependency
    - cleanup
    - destroy
    - create
    - prepare
    - converge
    - verify